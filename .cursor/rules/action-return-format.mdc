---
globs: src/actions/**/*.ts
---

# Action 返回格式规范

## 移除 success 字段

所有 action 的返回对象都**不应该**包含 `success` 字段，因为 HTTP 状态码已经能够明确表示请求的成功或失败状态。

### 原因说明

- **HTTP 状态码语义明确**：2xx 表示成功，4xx 表示客户端错误，5xx 表示服务器错误
- **避免冗余**：success 字段与 HTTP 状态码存在语义重复
- **简化数据结构**：减少不必要的字段，提升代码可读性
- **符合 RESTful 设计**：充分利用 HTTP 协议本身的语义

### 正确的做法

```typescript
// ✅ 正确：直接返回数据，HTTP 状态码表示结果
export async function someAction() {
  try {
    const result = await processData();
    return result; // 200 OK
  } catch (error) {
    throw new Error('处理失败'); // 500 或其他错误状态码
  }
}
```

### 错误的做法

```typescript
// ❌ 错误：不必要的 success 字段
export async function someAction() {
  try {
    const result = await processData();
    return {
      success: true, // 不需要
      data: result,
    };
  } catch (error) {
    return {
      success: false, // 不需要
      error: error.message,
    };
  }
}
```

### 注意事项

- 在 action 函数中，如果需要返回错误，应该通过 `throw` 抛出异常，而不是返回包含 `success: false` 的对象
- HTTP 框架（如 Astro actions）会自动将异常转换为适当的错误状态码
- 客户端应该通过检查 HTTP 状态码来判断请求是否成功，而不是检查返回数据中的 `success` 字段

### 迁移指南

在重构现有代码时：

1. 移除所有返回对象中的 `success` 字段
2. 将错误处理从返回对象改为 `throw` 异常
3. 更新前端代码，移除对 `success` 字段的检查，改为检查 HTTP 状态码
